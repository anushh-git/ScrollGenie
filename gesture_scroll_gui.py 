import cv2
import mediapipe as mp
import pyautogui
import time
import tkinter as tk
from PIL import Image, ImageTk
import os

# Activate Chrome
os.system('osascript -e \'tell application "Google Chrome" to activate\'')

# MediaPipe Setup
mp_hands = mp.solutions.hands
mp_drawing = mp.solutions.drawing_utils
hands = mp_hands.Hands(max_num_hands=1, min_detection_confidence=0.7)

# Gesture state
last_scroll_time = time.time()

# Webcam setup
cap = None
for i in range(3):
    test = cv2.VideoCapture(i, cv2.CAP_AVFOUNDATION)
    if test.isOpened():
        print(f"‚úÖ Camera opened at index {i}")
        cap = test
        break

if not cap or not cap.isOpened():
    raise RuntimeError("‚ùå No camera found!")

# Tkinter GUI
root = tk.Tk()
root.title("ScrollGenie")
root.geometry("720x540")
video_label = tk.Label(root)
video_label.pack()

def stop_camera():
    cap.release()
    root.quit()

tk.Button(root, text="üõë Stop Camera", command=stop_camera, bg="red", fg="white", font=("Arial", 12)).pack(pady=10)

is_scrolling = False

def update_frame():
    global last_scroll_time

    success, image = cap.read()
    if not success:
        print("‚ö†Ô∏è Failed to read frame.")
        return

    image = cv2.flip(image, 1)
    rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)
    results = hands.process(rgb)

    if results.multi_hand_landmarks:
        for hand_landmarks in results.multi_hand_landmarks:
            mp_drawing.draw_landmarks(image, hand_landmarks, mp_hands.HAND_CONNECTIONS)

            thumb = hand_landmarks.landmark[mp_hands.HandLandmark.THUMB_TIP]
            index = hand_landmarks.landmark[mp_hands.HandLandmark.INDEX_FINGER_TIP]
            middle = hand_landmarks.landmark[mp_hands.HandLandmark.MIDDLE_FINGER_TIP]

            if index.y < thumb.y and middle.y < thumb.y:
                if time.time() - last_scroll_time > 5:
                    print("üîº Pressing UP")
                    pyautogui.press('up')
                    last_scroll_time = time.time()

            elif index.y > thumb.y and middle.y > thumb.y:
                if time.time() - last_scroll_time > 5:
                   print("üîº Pressing DOWN")
                    pyautogui.keyDown('down')
                    time.sleep(0.05)
                    pyautogui.keyUp('down')

                    last_scroll_time = time.time()
    img = Image.fromarray(rgb).resize((700, 480))
    imgtk = ImageTk.PhotoImage(image=img)
    video_label.imgtk = imgtk
    video_label.configure(image=imgtk)
    root.after(10, update_frame)

update_frame()
root.mainloop()
